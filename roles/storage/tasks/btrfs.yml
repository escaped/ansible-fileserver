- name: btrfs | Which kernel is installed?
  shell: uname -a | cut -d " " -f 3 | cut -c -4
  changed_when: False
  register: current_kernel

- name: btrfs | Kernel compatible to selected btrfs-tools?
  fail: msg="Kernel ({{current_kernel.stdout}}) should match btfs-tools version v{{btrfs_version}}."
  changed_when: False
  failed_when: 'current_kernel.stdout not in "{{btrfs_version}}"'

- name: btrfs | uninstall btrfs-tools
  apt: pkg=btrfs-tools state=absent

- name: btrfs | Install required packages (1)
  apt: pkg={{item}} state=latest
  with_items:
    - make
    - gcc
    - uuid-dev
    - libattr1-dev
    - zlib1g-dev
    - libacl1-dev
    - e2fslibs-dev
    - libblkid-dev
    - liblzo2-dev

- name: btrfs | Install required packages (2)
  apt: pkg={{item}} state=latest install_recommends=no
  with_items:
    - asciidoc
    - xmlto

- name: btrfs | check installed btrfs-tools
  command: btrfs --version | cut -d " " -f 2
  changed_when: False
  ignore_errors: True
  register: current_version

- name: btrfs | clone repo
  git: repo=git://git.kernel.org/pub/scm/linux/kernel/git/kdave/btrfs-progs.git
       accept_hostkey=True
       dest=/tmp/btrfs-tools
       version="v{{btrfs_version}}"
  register: download
  when: current_version|failed or current_version.stdout != "v{{btrfs_version}}"

- name: btrfs | compile
  command: chdir=/tmp/btrfs-tools make
  when: download|changed

- name: btrfs | install
  command: chdir=/tmp/btrfs-tools make install
  when: current_version|failed or download|changed


- name: btrfs | install scrub script
  copy: src=btrfs-scrub dest=/usr/local/bin

- name: btrfs | shlock | is installed?
  stat: path=/usr/local/bin/shlock
  register: shlock

- name: btrfs | shlock | install inn
  apt: name=inn state=installed install_recommends=no
  when: not shlock.stat.exists

- name: btrfs | shlock | copy shlock to /usr/local/bin/
  command: cp /usr/lib/news/bin/shlock /usr/local/bin
  when: not shlock.stat.exists

- name: btrfs | shlock | uninstall inn
  apt: name=inn state=absent
  when: not shlock.stat.exists

- name: btrfs | cron | regulary btrfs scrub
  cron: name="Scrub btrfs" special_time=weekly job="/usr/local/bin/btrfs-scrub"
